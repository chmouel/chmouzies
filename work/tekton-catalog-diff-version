#!/usr/bin/env bash
set -e

# by default autodetect, set it up here if you like
upstream=

# Wether to delete the checkout branch, set it to yes or use the -d option
deletecheckout=

currentbranch=$(git symbolic-ref -q HEAD);currentbranch=${currentbranch#refs/heads/}

if git --no-pager remote |grep -q upstream;then
    upstream=upstream
elif [[ -z ${upstream} ]];then
    upstream=origin
fi

while getopts "d" o; do
    case "${o}" in
        d)
            deletecheckout="yes"
            ;;
        *)
            echo "Invalid option: ${OPTARG}"; exit 1;
            ;;
    esac
done
shift $((OPTIND-1))


PR=${1}

[[ ${PR} != *tektoncd/catalog/pull* ]] && {
    echo "i need the first argument to be a tekton/catalog PR, ie.: https://github.com/tektoncd/catalog/pull/1"
    exit 1
}

cd "$GOPATH/src/github.com/tektoncd/catalog"

hub checkout "${PR}"

newbranch=$(git symbolic-ref -q HEAD);newbranch=${newbranch#refs/heads/}

changed_task_version=$(git diff-tree --no-commit-id --name-only -r \
                           $(git rev-parse --abbrev-ref HEAD)|grep '^task/'| \
                           sed 's,\([^/]*/[^/]*/[^/]*\).*,\1,'|sort -u)

if [[ -z ${changed_task_version} ]];then
    echo "Not a commit with a change in task"
    exit 0
fi

check_if_task_version_on_main=$(git ls-tree -r ${upstream}/main --name-only ${changed_task_version} || true)
if [[ -n ${check_if_task_version_on_main} ]];then
    echo "Not a new version, since '${changed_task_version}' is already in main"
    exit 0
fi

task_name=$(basename $(dirname ${changed_task_version}))
task_version=$(basename ${changed_task_version})

# previous_task_version=$(ls task/${task_name}|sort -ur|grep '^[0-9]*\.[0-9]*'|grep -v ${task_version} | head -1)
previous_task_version=$(find task/${task_name} -maxdepth 1 -regex '.*/[0-9]\.[0-9]$' \! -name "${task_version}" -printf "%f\n"|sort -run|head -1)

difffilename=/tmp/catalog-review-${task_name}-${task_version}.diff

diff -urN task/${task_name}/${previous_task_version} task/${task_name}/${task_version} | \
    tee ${difffilename}

type -p pastegg >/dev/null 2>/dev/null && \
    pastegg -n \
            "Diff task ${task_name} between version ${previous_task_version} and new version ${task_version}" \
            -d "PR: ${PR}" \
            -f ${difffilename} | tee ${difffilename/.diff/.pasteurl}

if [[ -n ${deletecheckout} && ${newbranch} != ${currentbranch} ]];then
    git checkout ${currentbranch}
    git branch -D ${newbranch}
fi
