#!/usr/bin/env zsh
set -e
# set -x

profile=chmouel42
prefixk=os42
operator=
releaseyaml=
koinstall=

while getopts ':kor' arg;do
    case $arg in
      (o) operator=yes ;;
      (r) releaseyaml=yes ;;
      (k) koinstall=yes  ;;
      (\?) print invalid option: $OPTARG;;
    esac
done

(( OPTIND > 1 )) && shift $(( OPTIND - 1 ))

[[ -n ${1} ]] && { profile=$1; }
[[ -n ${2} ]] && { prefixk=$2; }

export KUBECONFIG=~/.kube/config.${prefixk}
curl -s chmouel.com/tmp/${profile}.kubeconfig.gpg | gpg --decrypt > ${KUBECONFIG}

function operatorinstall() {
    cat <<EOF | oc apply -f-
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: pipelines
  namespace: openshift-operators
spec:
  channel: dev-preview
  name: tekton-operator
  source: community-operators
  sourceNamespace: openshift-marketplace
EOF
}

function releaseyamlinstall {
    oc create -f \
       https://raw.githubusercontent.com/openshift/tektoncd-pipeline/release-next/openshift/release/tektoncd-pipeline-nightly.yaml
}

function koinstall {
    cd $GOPATH/src/github.com/tektoncd/pipeline

    ${HOME}/bin/git-downup-update-repos

    currentbranch=$(git symbolic-ref -q HEAD);currentbranch=${currentbranch#refs/heads/}
    changed=$(git status --porcelain)
    if [[ -n ${changed} ]];then
        git stash save -a -u "Staged before running an update $(date)"
    fi

    git checkout master

    info() {
        echo "Job has failed you can run"
        echo "  git checkout ${currentbranch}"
        [[ -n ${changed} ]] && echo " and git stash pop";
    }
    trap info ERR

    export GO111MODULE=off
    ko apply -f config/

    git checkout ${currentbranch}

    if [[ -n ${changed} ]];then
        git stash pop
    fi
}

if [[ -n ${koinstall} ]]; then
    koinstall
elif [[ -n ${releaseyaml} ]];then
    releaseyamlinstall
elif [[ -n ${operator} ]];then
    operatorinstall
fi

sleep 3

oc project tekton-pipelines
oc get pod -owide
