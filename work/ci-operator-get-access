#!/bin/bash
# Get Latest ci-op cluster access
# Chmouel Boudjnah <chmouel@chmouel.com>
set -e


JOB_NAME=${1:-"e2e-aws-ocp-41"}
KOUTPUT="${HOME}/.kube/config.ci-operator"

TMP=$(mktemp /tmp/.mm.XXXXXX)
clean() { rm -f ${TMP}; }
trap clean EXIT

function wait_and_log() {
    local ns=${1}
    local pod=${2}
    local phase=${3}
    local grepend="${4}"
    local previous_log= log= diff=

    while True;do
        _s=$(oc get pod ${pod/pod\/} -n ${ns} -o template="{{ .status.phase }}")
        [[ ${_s} != "Running" ]] && {
            echo "Waiting pod ${pod/pod\/} to come currently in '${_s}' phase "
            sleep 2
            continue
        }
        log="$(oc logs -n ${ns} ${pod} -c ${phase} --tail=10)"

        [[ "${log}" == "${previous_log}" ]] && { sleep 2;continue ;}

        finis=$(echo ${log}|egrep -Eo "${grepend}" || true)
        [[ -n ${finis} ]] && {
            echo "${finis}" > ${TMP}
            return
        }

        if [[ -n ${previous_log} ]];then
            diff="$(diff -u <(echo "${previous_log}") <(echo "$log") || true)"
            echo "${diff}" | sed -n '/^+++/d;/^\+/ {s/^.//;p;}'
        else
            echo "${log}"
        fi
        previous_log="${log}"
        sleep 1
    done
}

oc whoami --show-server=true|grep -q api.ci.openshift.org || {
    echo "This is designed to be running on ci.openshift"
    echo "Go to https://api.ci.openshift.org and get a token from the 'Copy Login command' top right menu"
    exit 1
}

_cnt=0
echo "Waiting for pods with prefix ${JOB_NAME} to comes up.."
while True;do
    _ciprojects=$(oc get project|grep '^ci-op'|sed 's/ .*//' || true)
    for _cip in ${_ciprojects};do
        e2e_test_pod=$(oc get pod -n ${_cip} -o name|grep "^pod/${JOB_NAME}" || true)
        [[ -n ${e2e_test_pod} ]] && {
            ci_prj=${_cip}
            break
        }
    done
    [[ -n ${e2e_test_pod} ]] && break
    [[ ${_cnt} == 500 ]] && { echo "We can't find no pod with prefix ${JOB_NAME}"; exit 1 ;}
    (( _cnt++ ))
    sleep 3
done
echo "Found it in namespace ${ci_prj}...."

wait_and_log ${ci_prj} ${e2e_test_pod} setup "Access the OpenShift web-console here.*Login to the console with user.*"

oc rsh -n ${ci_prj} -c lease ${e2e_test_pod} cat /tmp/artifacts/installer/auth/kubeconfig > ${KOUTPUT}
export KUBECONFIG=${KOUTPUT}
echo export KUBECONFIG=${KOUTPUT}

# Probably knative/tekton specific so you may not need it so fel free to rip this off,
for p in $(oc get project -o name|grep arendelle|sed 's/.*\///');do
    output=$(oc get pod -o name -n $p 2>/dev/null)
    [[ -n ${output} ]] && {
        oc project ${p}
        oc describe "${output}"
        break
    }
done
