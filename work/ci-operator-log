#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Author: Chmouel Boudjnah <chmouel@chmouel.com>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
import json
import subprocess
import sys
import os
import argparse

parser = argparse.ArgumentParser()
parser.add_argument("--last", '-l', action="store_true", default=False)
args = parser.parse_args(sys.argv[1:])

command = [
    "oc", "get", "pod", "-n", "ci", "--sort-by=.metadata.creationTimestamp",
    "-l", "prow.k8s.io/refs.repo=tektoncd-pipeline", "-ojson"
]
#command = ["cat", "/tmp/r.json"]
shell = subprocess.run(command, stdout=subprocess.PIPE)
ciruns = json.loads(shell.stdout)
ret = []
for run in ciruns['items']:
    jobspec = None
    for x in run['spec']['containers'][0]['env']:
        if x['name'] == 'JOB_SPEC':
            jobspec = json.loads(x['value'])

    ret.append(
        "#%s - @%s - %s - %s - %s" %
        (jobspec['refs']['pulls'][0]['number'],
         jobspec['refs']['pulls'][0]['author'], run['status']['startTime'],
         run['metadata']['labels']['prow.k8s.io/job'],
         run['metadata']['name']), )

if not ret:
    sys.exit(1)

ret.reverse()
if args.last:
    r = ret[0]
else:
    p = subprocess.run(["fzf"],
                       stdout=subprocess.PIPE,
                       input="\n".join(ret).encode())

    if p.returncode != 0:
        sys.exit(1)
    r = p.stdout.decode().strip()
container_name = r.split(" ")[-1]
job_type = r.split(" ")[-3]
os.system(f"oc logs -n ci {container_name} -c test")
