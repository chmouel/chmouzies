#!/usr/bin/env zsh
set -e
TMP=$(mktemp /tmp/.mm.XXXXXX)
clean() { rm -f ${TMP}; }
trap clean EXIT
REMOTE_BRANCH=master
TEST=""

while getopts 'C:ct' arg
do
    case $arg in
        (C) REMOTE_BRANCH=$OPTARG;;
        (c) REMOTE_BRANCH=""  ;;
        (t) TEST="true"  ;;
        (\?) print invalid option: $OPTARG;exit 1;;
    esac
done
(( OPTIND > 1 )) && shift $(( OPTIND - 1 ))

BASE_REMOTE=${1}
USER_REMOTE=${2}

[[ -z ${BASE_REMOTE} ]] && {
    echo "No base remote specified, will be using *rigin*"
    BASE_REMOTE=origin
}

[[ -z ${USER_REMOTE} ]] && {
    echo "No remote specified, will be using $(whoami)"
    USER_REMOTE=$(whoami)
}

read -t 3 || true

BASE_REPO=$(git remote get-url ${BASE_REMOTE}|sed 's,\(https://github.com/\|git@github.com:\),,')
USER_REPO=$(git remote get-url ${USER_REMOTE}|sed 's,\(https://github.com/\|git@github.com:\),,')

[[ -z ${BASE_REPO} ]] && {
    echo "Could not find information about Base repo: ${BASE_REMOTE}"
    exit 1
}

[[ -z ${USER_REPO} ]] && {
    echo "Could not find information about User repo: ${USER_REPO}"
    exit 1
}

CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

[[ -z ${REMOTE_BRANCH} ]] && {
    REMOTE_BRANCH=$(git ls-remote --heads ${BASE_REMOTE}|sed 's,.*refs/heads/,,'|fzf -1 --no-clear --height 10 || true)
    [[ -z ${REMOTE_BRANCH} ]] && {
        echo "Could not find a remote branch to push to..."
        exit 1
    }
}

echo "About to push Branch: ${CURRENT_BRANCH} to ${USER_REMOTE} :";sleep 1;echo
if [[ -z ${TEST} ]];then
    git push -u  ${USER_REMOTE} ${CURRENT_BRANCH}
fi


echo "About to PR: Base: ${BASE_REPO}:${REMOTE_BRANCH} HEAD: ${USER_REPO}:${CURRENT_BRANCH} :";sleep 1;echo
if [[ -z ${TEST} ]];then
    hub pull-request -b ${BASE_REPO}:${REMOTE_BRANCH} -h ${USER_REPO}:${CURRENT_BRANCH}
fi
