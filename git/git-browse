#!/usr/bin/env bash
function readlinkf() {
    python3 -c 'import os,sys;print(os.path.realpath(sys.argv[1]))' "$1"
}

BROWSER=true
SHA=

while getopts "mnu:" o; do
    case "${o}" in
        m) SHA=master;;
        n) BROWSER=;;
        u) UPSTREAM_NAME=${OPTARG};;
        *) echo "-m=use master, -n=no browser"; exit 1;;
    esac
done
shift $((OPTIND-1))

if [[ -z ${UPSTREAM_NAME} ]];then
    if git remote show upstream 2>/dev/null >/dev/null;then
        UPSTREAM_NAME=upstream
    elif git config forge.remote 2>/dev/null >/dev/null;then
        UPSTREAM_NAME=$(git config forge.remote)
    else
        UPSTREAM_NAME=origin
    fi
fi

ORIGIN_REMOTE=$(git config remote.${UPSTREAM_NAME}.url)
[[ -z ${ORIGIN_REMOTE} ]] && {
    echo "Could not detect your origin remote" ;
    exit 1
}
ORIGIN_REMOTE=${ORIGIN_REMOTE/.git/}

if [[ ${ORIGIN_REMOTE} =~ git@gisthub.com:([0-9]+) ]];then
    url=https://gist.github.com/${BASH_REMATCH[1]}
    echo "$url"
    type -p open >/dev/null 2>/dev/null && open "$url"
    exit
fi

if [[ ${ORIGIN_REMOTE} != git@github.com* && ${ORIGIN_REMOTE} != http*github.com* ]];then
    echo "We only support GitHUBs"
    exit
fi

if [[ ${ORIGIN_REMOTE} == git@github.com* ]];then
    ORIGIN_REMOTE=${ORIGIN_REMOTE/git@github.com:/https:\/\/github.com\/}
fi

URL=${ORIGIN_REMOTE}

LINE=
if [[ -n ${2} ]];then
    LINE="#L${2}"
    if [[ -n ${3} ]];then
        LINE=${LINE}-L${3}
    fi
fi

ARG=$1
if [[ -e ${ARG} ]];then

    if [[ -z ${SHA} ]];then
        BRANCH=$(git rev-parse --short HEAD)
    else
        BRANCH=${SHA}
    fi

    base_repo=$(git rev-parse --show-toplevel)
    ffile=$(readlinkf $1)
    ARG=${ffile/$base_repo/}
    #http://stackoverflow.com/a/20195713/145125
    ARG=${ARG#?}
    URL=${URL}/blob/${BRANCH}/${ARG}${LINE}
elif [[ -n ${ARG} ]];then
    URL=${ORIGIN_REMOTE}/commit/${ARG}${LINE}
else
    URL=${ORIGIN_REMOTE}
fi

echo ${URL}

type -p xdg-open &>/dev/null && OPEN_CMD=xdg-open
type -p open &>/dev/null && OPEN_CMD=open

if [[ -n ${BROWSER} && -n ${OPEN_CMD} ]];then
    ${OPEN_CMD} ${URL}
fi
